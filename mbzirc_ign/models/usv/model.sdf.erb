<%
if !defined?(name) || name== nil || name.empty?
  $model_name = 'usv'
else
  $model_name = name
end

$arm_name = nil
if defined?(arm)
  $arm_name = arm
end

if !defined?(gripper) || gripper== nil || gripper.empty?
  $gripper_name = 'mbzirc_oberon7_gripper'
else
  $model_name = gripper
end

if !defined?(wavefieldSize) || wavefieldSize == nil || wavefieldSize.empty?
  $wavefield_size = 1000.0
else
  $wavefield_size = wavefieldSize.to_f
end
  $wavefield_cell_count = $wavefield_size / 20.0

  x_uu = 72.4 # Hydrodynamic quadratic coefficient
  x_u = 51.3 # Hydrodynamic linear coefficient
  max_velocity_knots = 8 # Maximum velocity in knots. Taken from the USV specification.
  max_velocity_mps = max_velocity_knots * 0.5144 # convert knots to m/s
  max_total_thrust = (x_u + x_uu * max_velocity_mps) * max_velocity_mps
%>

<?xml version="1.0"?>

<sdf version='1.9'>
<model name="<%= $model_name%>">
  <static>false</static>
  <self_collide>true</self_collide>

  <!-- Platform base model-->
  <include merge="true">
    <uri>model://mbzirc_usv_base</uri>
  </include>

  <% if $arm_name != nil%>
  <include>
    <name>arm</name>
    <uri>model://<%= $arm_name%></uri>
    <placement_frame>arm_mount_point</placement_frame>
    <pose relative_to="arm_slot_0">0 0 0 0 0 0</pose>
  </include>
  <joint name="arm_slot_0_joint" type="fixed">
    <parent>arm_slot_0</parent>
    <child>arm::arm_mount_point</child>
  </joint>
  <% end %>

  <plugin
    filename="ignition-gazebo-thruster-system"
    name="ignition::gazebo::systems::Thruster">
    <joint_name>left_engine_propeller_joint</joint_name>
    <thrust_coefficient>0.004422</thrust_coefficient>
    <fluid_density>1000</fluid_density>
    <propeller_diameter>0.2</propeller_diameter>
    <velocity_control>true</velocity_control>
    <max_thrust_cmd><%= max_total_thrust/2 %></max_thrust_cmd>
  </plugin>

  <plugin
    filename="ignition-gazebo-joint-position-controller-system"
    name="ignition::gazebo::systems::JointPositionController">
    <joint_name>left_chassis_engine_joint</joint_name>
    <use_velocity_commands>true</use_velocity_commands>
    <topic><%= $model_name%>/left/thruster/joint/cmd_pos</topic>
  </plugin>

  <plugin
    filename="ignition-gazebo-thruster-system"
    name="ignition::gazebo::systems::Thruster">
    <joint_name>right_engine_propeller_joint</joint_name>
    <thrust_coefficient>0.004422</thrust_coefficient>
    <fluid_density>1000</fluid_density>
    <propeller_diameter>0.2</propeller_diameter>
    <velocity_control>true</velocity_control>
    <max_thrust_cmd><%= max_total_thrust/2 %></max_thrust_cmd>
  </plugin>

  <plugin
    filename="ignition-gazebo-joint-position-controller-system"
    name="ignition::gazebo::systems::JointPositionController">
    <joint_name>right_chassis_engine_joint</joint_name>
    <use_velocity_commands>true</use_velocity_commands>
    <topic><%= $model_name%>/right/thruster/joint/cmd_pos</topic>
  </plugin>

  <plugin
    filename="libSurface.so"
    name="ignition::gazebo::systems::Surface">
    <link_name>base_link</link_name>
    <vehicle_length>6</vehicle_length>
    <vehicle_width>3.3</vehicle_width>
    <hull_radius>0.27</hull_radius>
    <fluid_level>0.45</fluid_level>

    <!-- Waves -->
    <wavefield>
      <size><%= $wavefield_size%> <%= $wavefield_size%></size>
      <cell_count><%= $wavefield_cell_count%> <%=$wavefield_cell_count%></cell_count>
      <wave>
        <model>PMS</model>
        <period>5</period>
        <number>3</number>
        <scale>1.1</scale>
        <gain>0.3</gain>
        <direction>1 0</direction>
        <angle>0.4</angle>
        <tau>2.0</tau>
        <amplitude>0.0</amplitude>
        <steepness>0.0</steepness>
      </wave>
    </wavefield>
  </plugin>

  <plugin
    filename="libSimpleHydrodynamics.so"
    name="ignition::gazebo::systems::SimpleHydrodynamics">
    <link_name>base_link</link_name>
    <!-- Added mass -->
    <xDotU>0.0</xDotU>
    <yDotV>0.0</yDotV>
    <nDotR>0.0</nDotR>
    <!-- Linear and quadratic drag -->
    <xU><%=x_u%></xU>
    <xUU><%=x_uu%></xUU>
    <yV>40.0</yV>
    <yVV>0.0</yVV>
    <zW>500.0</zW>
    <kP>100.0</kP>
    <mQ>100.0</mQ>
    <nR>400.0</nR>
    <nRR>0.0</nRR>
  </plugin>

  <!-- Publish robot state information -->
  <plugin filename="libignition-gazebo-pose-publisher-system.so"
    name="ignition::gazebo::systems::PosePublisher">
    <publish_link_pose>true</publish_link_pose>
    <publish_sensor_pose>true</publish_sensor_pose>
    <publish_collision_pose>false</publish_collision_pose>
    <publish_visual_pose>false</publish_visual_pose>
    <publish_nested_model_pose>true</publish_nested_model_pose>
    <publish_model_pose>false</publish_model_pose>
    <use_pose_vector_msg>true</use_pose_vector_msg>
    <static_publisher>true</static_publisher>
    <static_update_frequency>1</static_update_frequency>
  </plugin>


  <!-- uncomment the following to visualize valid region for placement
      of target objects -->
  <!--
  <link name='target_placement_region'>
    <visual name="v1">
      <transparency>0.5</transparency>
      <geometry>
        <box>
          <size>5 5 5</size>
        </box>
      </geometry>
      <material>
        <ambient>0.0 1.0 0.0 0.5</ambient>
        <diffuse>0.0 1.0 0.0 0.5</diffuse>
        <specular>0.5 0.5 0.5 0.5</specular>
      </material>
    </visual>
    <cast_shadows>false</cast_shadows>
  </link>
  <joint name="target_placement_joint" type="fixed">
    <parent>target_placement_region</parent>
    <child>base_link</child>
  </joint>
  -->

  <!-- This plugin detects when target objects are placed at the
       the defined region. A message is published on the <topic> when these
       events occur -->
  <plugin filename="libRegionDetector.so"
          name="mbzirc::RegionDetector">
    <topic>/target_object_detector</topic>
    <pose>0 0 0 0 0 0</pose>
    <geometry>
      <box>
        <size>5 5 5</size>
      </box>
    </geometry>
  </plugin>

</model>
</sdf>
